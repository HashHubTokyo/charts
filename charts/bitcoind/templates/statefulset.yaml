apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "bitcoind.fullname" . }}
  labels:
    app: {{ template "bitcoind.name" . }}
    chart: {{ template "bitcoind.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "bitcoind.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "bitcoind.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - command:
            - /usr/bin/monacoind
{{- if .Values.configurationFile }}
            - -conf=/root/conf/bitcoin.conf
{{- end }}
          name: {{ template "bitcoind.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          ports:
            - name: rpc
              containerPort: {{ .Values.service.rpcPort }}
            - name: p2p
              containerPort: {{ .Values.service.p2pPort }}
            - name: testnet
              containerPort: {{ .Values.service.testnetPort }}
            - name: testnetp2pport
              containerPort: {{ .Values.service.testnetP2pPort }}
          readinessProbe:
            exec:
              command:
              - sh
              - -ec
              - monacoin-cli {{- if .Values.configurationFile }}--conf=/root/conf/bitcoin.conf{{- end }} getblockchaininfo | awk '/"blocks":/ { blocks = $2; gsub(",", "", blocks); } /"headers":/ { headers = $2; gsub(",", "", headers); } END { if (blocks != headers) { exit 1; }}'
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - name: data
              mountPath: /root/.bitcoin
            {{- if .Values.configurationFile }}
            - name: config
              mountPath: /root/conf
            {{- end }}
      nodeSelector:
  {{ toYaml .Values.nodeSelector | indent 6 }}
      volumes:
        {{- if .Values.configurationFile }}
        - name: config
          configMap:
            name: {{ template "bitcoind.fullname" . }}
        {{- end }}
        {{- if .Values.persistence.enabled }}
        {{- else }}
        - name: data
          emptyDir: {}
        {{- end }}
    {{- if .Values.persistence.enabled }}
    volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
        - {{ .Values.persistence.accessMode }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        storageClassName: standard
    {{- end }}
